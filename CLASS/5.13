마크 다운 (markdown language)
- 마크업 언어 중 하나
- txt 파일 차이점은 포매팅이 들어가는 것
- 언어에 규칙이 있고 이름 html로 전환하여 화면에 보여지는 방식

##장단점
- 간결하다
- 도구없이 사용가능하다.
- 용량이 적다.(낭비가 없다)
- 버전 관리도 쉽다.
- 지워하는 애플리케이션이 많다.

단점

- 표준이 없다.(플랫폼 별로 지원하는 형식이 다르다)


## 프로세스
파일 생성 -> 플랫폼에 파일을 변환 -> html로 읽고 -> 랜더링 된 결과물 보여줌
- 마크다운 프로세스, 파서, 등으로 부른다.

## 기본 문법
1. headings

- # + ' ' : heading 1
- ## + ' ' : heading 2
- ### + ' ': heading 3
제목 부제목 소제목 지정가능

주의: # 다음 항상 한칸 띄워야 함
한 줄 개행 들어가야 함

ex) 타이틀 (한줄 띄고)

(나아가는방식)


- 본문

2. 문단(paragraph)
- 한줄 개행

이것은 문단입니다.

- 주의 : 들여쓰기하면 안된다.(인식이)
ex)   이것은 문단이 아닙니다.

3. linebreaks (줄 바꿈)
- 공백 2개이상 넣고 엔터
- 눈에 보이지 않기 때문에 불편함
- <br>을 인식해서 줄 바꿔주는 플랫폼도 잇음(bash 가능)
- 무방비하게 엔터 남용하지 말 것

4. 강조하기

4.1 bold
  - ** or __ 사용한다.
  - 조금 더 진하게 나옴
  - 강조하기 싶은 부분 앞 뒤로 감싸기
  - 한 옵션을 정해서 사용하는 것이 안 헷갈림
  - __는 한계가 있음. 단어 중간에 사용할 경우 인식되지 않음 (사용할 것이면  __라__ 앞뒤로 공백을 줘야함)
  
4.2 italic
  - * or _1개
  - 앞뒤로 공백이 없을 시 인식이 안됨
  - 나머지는 동일
  
4.3 bold + italic
  - *** or ___ (3개)
  - 역시 단어 중간은 안됨 (언더바 동일함)
  - **_,__* 가능함

5. 인용구
  - > 기호를 사용
  - > 볼록으로 표현되는 볼록은 전부 인용구
  - 인용안에 인용할 경우 >> (2개) 사용, 중첩 인용 (nested quotes)

  - 인용 안에 다른 요소 넣을 때 (문제 없음)


6. 리스트
6.1 순서가 있는 리스트
  - 숫자 + '.'문단이 시작됨
  - 숫자에 상관없이 순서가 매겨진다.
  - 숫자 + ')'는 플랫폼마다 다르다.

6.2 순서 없는 리스트
  - 대시(-),*, + 기호 등을 사용하여 목록화한다.
  - 일반적으로는 혼합해서 사용하는 것은 주의해라
  - 한 가지만 택해서 사용하는 것을 추천

6.3 중첩 리스트
  - 탭으로 구분한다.
  - 기능을 해제하고 싶다면? \ 사용

6.4 리스트 중간에 요소 삽입하기
  - 들여쓰기 하고 요소를 넣는다.
  - 가독성을 위해 엔터로 구분해주는게 좋다.
  - 앞뒤로 개행 넣는 습관

7. 코드 블록
  - 라인 내부: 'code_block' (backtick) 사용한다.
    - 코드 안에 백탯이 있으면, ''code_block''
  - 라인 외부
    - 모든 라인을 탭한다.
    - 탭하고 싶지 않다면 (backtick) 3개 사용 언어 지정시 하이라이트 들어감 (ptyhon, shell....)
    - 언어를 명시할 수 있음

8. 선 긋기
  ***
  ___
  
  --- 

  - 앞뒤로 개행해주는 것이 좋다.

9. 링크 삽입하기
  - 일반적인 구조 텍스트 부부을 [] 감싸고 () 주소 입력
  [텍스트](주소)
  
  - 마우스를 올릴 때 주소 표시?
  (www.주소 "title")
  
  - 단순한 방식 : <url> 
  - 플랫폼에 따라 이메일을 자동으로 인식할 수도 있다.
  - 기능을 해제하려면? '(backtick) 사용 ,but 현재 쓰고 있는 bash에서는안됨 github는 됨 (찾아보자)

  - 링크 포맷팅 가능함
    - bold, italic 등 모두 가능하고
    - 공백 주의
    - 갓 플랫폼마다 다르다
    - **_ _**

  - 코드에 링크를 걸고 싶다.

    this is a python code

8-1. 출처 표기식 링크 걸기
  - 레퍼런스 모으기 위한 방법
  - 본문 내부 / 레퍼런스 
    [text][label]
    [label] : url 
    - 콜론 다음에 공백
  
  이것은 [사과][1] (본문 내부)
  이것은 [배][pear]입니다.

  (레퍼런스 부분)
  [1]: www.wikipedia.com
  [pear]: <www.~~> (감싸도 되고 안해도 되공)
  (replit 에서 안되고 github에서 됨)

  - 레이블은 글자, 숫자, 공백, 기호 가능함
  - url은 <, > 감싸도 된다. or ("") or 없어도 됨
  - 본문에 레퍼렌스 부분이 나타나지 않는다.

9. 이미지
  - 구조 : ![text][img 주소 "이름 가능"]
  - title은 옵션 넣어도 되고 안넣어도 되공
  - 이미지 자체에 링크 삽입
   ![text][img 주소 "이름 가능"](url)

10. 표 
  - 열(|) 과 행 (-)
  - 행이 생성이 되면 표가 만들어 진다. ( - 3개 이상)
  - 정렬
    - 왼쪽, 오른쪽, 가운데 :을 붙임 위치에
    : : 앞 뒤로 붙으면 가운데 정렬
    행 부분에 삽입
  - 셸 내부에서도 다른 문법을 사용할 수 있다. (code 블록은 안됨 `)

# 확장 표현
11. 각주 달기
- 텍스트 내부에서 윗첨자로 각주 표시하기
^을 많이 씀
이것은 사과[^1]입니다.
(replit은 안됨)
- 본문 내부/ 각주 부분
- text[^1]
- [^1]: this is a footnote 1.
- 각주부부은 텍스트 어디에나 위치할 수 있음
  - 화면 하단에 존재한다.
  - 표, 리스트 등등 안되는 기능 존재한다. (체크 하면서 사용)

12. 기타 텍스트 강조

 1. strikethrough
    - 글자에 선 긋기
    - ~~ 앞뒤로 감싼다.

  2. 형광펜
  == (replit은 안됨)
  ==text==

13. 아래첫잠, 윗첨자
  x^2^
  (replit은 안됨, github 기준)
  아래첨자
  H~2~O

14. 할일목록

-[X] todo 1
-[ ] todo 2 (체크가 안됨)

15. emoji 이모티콘
: 입력 시 목록이 나옴
이름을 알면 그냥 적으면 됨
:100:
:smile:
emoji 이름은 사이트 검색해서 사용하면 됨

emojipedia

복붙도 가능





  