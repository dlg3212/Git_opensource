tshell :
  시스템 자체에 접근하는 언어(명령어)
  리눅스 커널과 사용자를 연결해주는 인터페이스
  사용자에 입력을 읽고 해석하고 프로그램 실행

셸 스크립트 : 일련의 명령형을 한 파일에 담아놓음
  왜 넣을까?  : 파일 하나에 넣으면 한번에 돌릴 수 있음
  
운영체제 리눅스 : 다양하지만 BASH 사용 (표준. BOURNE AGAIN SHELL)

문법 :
  <프로그램명> <내용> 형식
  
ECHO : 셸 명령, 내장명령, 프로그램
   화면에 출력 PRINT와 같은 역할
   
변수 지정 가능:
  -스페이스 주의할 것(들어가면 안됨)
  -""사용해도 되고 스페이스 없으면 없어도 됨 
  -$ 변수를 사용할 때 사용
   - 내장된 변수도 있다 ($PATH) 대문자로 되어 있다.

리눅스 명령의 특징 :
  한가지 프로그램이 한 일만 수행가능 (순서대로 프로그램을 코딩해야된다)
  명령 조합을 잘 해야 한다.

명령 : 
  프로그램 자체 (ECHO 자체를 명령이라고 함)
  프로그램 + 내용 (단순명령, SIMPLE COMMAND)
  결합 명령 (COMBINED COMMAND) : 프로그램 + 옵션 + 내용
    프로그램을 구체화하는 역할
    '(소문자 알파벳, a)'
  명령인자 man grep : 명령인자 확인가능
    
ls : list임 
-l : 파일의 정보를 나타냄
cd : change directory 

파이프
  -|
  -명령형 | 명령형
  -less(깔끔하게 출력)
  이전 명령형의 출력값을 다음 명령의 입력값으로 보내는 역할
  'echo $PATH | less' 나갈때는' q ''
  파이프라인? : 파이프라인으로 연결한 명령형 
  
03.11 배울내용 다음 수업때 퀴즈 
  -wc. head. cut. grep. sort, uniq

입력
  -stdin : standard input/in. 표준 입력
  -프롬포트(cmd)를 통해서 입력되는 입력스트림


출력
  -stdout: standard output/out, 표준 출력
  -출력 스트림

 ex) /bin 하위디렉터리를 내용을 라인별로 출력하라
  ls(프로그램) + -l (명령) + /bin (내용)
  / : 최고상위폴더 
    '' 금지
1. wc
 파일 내용의 줄수(line) ,단어 수(word), 문자 수(character) 출력하는 명령
   ex) wc w1.txt = 65(line) 236(word) 2147(character) w1.txt(파일 이름)
  - 지금 디렉터리의 하위 디렉터리 내용의 줄 수, 단엇, 문자 출력하라
  1. 하위 디렉토리 조회
     ls -l | wc
    - 명령인자
    -w 단어
    -l 줄
    -c 문자
  ex) ls -l : wc -w, -l, - c
  2. txt 단어 몇 글자인지 세어보자.
   wc -w w1.txt  (파일 이름도 같이 출력)
  3. /bin 파일+디렉터리 개수 몇개인지
    ex) ls -l /bin | wc -l

2. head
  파일의 n째줄 내용을 화면에 출력하는 명령 
  -n? : 
    head -n3 (셋번째 줄까지)
    (default = 10)
  파일이 90줄 100줄 출력?:
    모든 내용 출력 오류 안남
  ex)이 파일의 첫번째줄의 단어수. 글자 수
    head -n1 w1.txt | wc -w -c
                         -wc(붙여써도 된다)
  ex2) ./bin 파일 중에서 앞에 다섯개만 출력
     ls /bin | head -n5

3. cut
  파일의 내용 중에서 특정 열만 출력하는 명령
  범위 지정 방법: 
    /t : -f (탭으로 되어있는 것을 찾음)
    ex) james /t 34
    f1            f1
     ex)
     cut -f1 name.txt

     -3, 5 ,6
     cut -f3,5,6
     4~5
     cut -f4-5

    -c (character)
    ex) c5 : 5번째까지
    -c -5
    -c1,2,3
    -c1~3
  #  animal.txt 1필드의 마지막 글자 출력
      cut -f1 animal.txt | tail -n1
      -1 (x) --> rev(reverse) 사용
      cut -f1 animal.txt | rev | cut -c1


  -d<구분자>
    -d, : 등등

  # animals.txt 4번째필드 : Lutz,Mark
    Lutz 출력하라 모든 last name
    cut -f4 animals.txt | cut -d, -f1
    